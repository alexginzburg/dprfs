#!/usr/bin/env python

import os
import sys
import socket
import select
import struct
import json
import time
import uuid
import ConfigParser
import binascii
import hashlib

from lib.client.dprfs_open import dprfs_open
from lib.client.dprfs_read import dprfs_read
from lib.client.dprfs_write import dprfs_write


config = ConfigParser.ConfigParser()
config.read( 'client.conf' )

network_address	= config.get( 'client', 'network_address' )
network_port	= config.getint( 'client', 'network_port' )
status_timeout	= config.getfloat( 'client', 'status_timeout' )
data_timeout	= config.getfloat( 'client', 'data_timeout' )
buffer_size	= config.getint( 'client', 'buffer_size' )



filename = sys.argv[1]

s = socket.socket( socket.AF_INET, socket.SOCK_DGRAM )

ttl = struct.pack( 'b', 1 )
s.setsockopt( socket.IPPROTO_IP, socket.IP_MULTICAST_TTL, ttl )

result = dprfs_open(s, filename)
result = json.loads(result)

fp = open( filename, "rb")
dprfs_write( s, result, fp )
fp.close()

result = dprfs_open(s, filename)
result = json.loads(result)

rf = open( "foo.pdf", "wb" )
result['r']['next'] = result['r']['base']
while True:
	result = dprfs_read( s, result )
	chunk = binascii.a2b_base64( result['r']['data'] )
	current = hashlib.sha1(chunk).hexdigest()
	rf.write( chunk )
	if result['r']['top'] == current:
		break
	if result['r']['next'] is None:
		break

rf.close()
s.close()
sys.exit(0)

