#!/usr/bin/env python

import os
import sys
import socket
import struct
import json
import hashlib
import ConfigParser

config = ConfigParser.ConfigParser()
config.read( 'server.conf' )

buffer_size	= config.getint( 'general', 'buffer_size' )

network_group 	= config.get( 'status', 'network_group' )
network_port 	= config.getint( 'status', 'network_port' )
meta_root	= config.get( 'status', 'meta_root' )

data_address	= config.get( 'data', 'network_address' )
data_port	= config.getint( 'data', 'network_port' )

def _ls( dirname ):
	if dirname is None:
		dirname = './'
	return os.listdir( dirname )

def _open( filename = None ):
	response = []
	if filename is None:
		return response
	os.chdir(meta_root)
	os.chdir(filename)
	response.append( {'base': os.readlink('base')} )
	response.append( {'top': os.readlink('top')} )
	return response

def _stat( filename ):
	if filename is None:
		filename = '.'
	return str(os.stat(filename))

def _mv():
	pass

def _cp():
	pass

def _ln():
	pass

def _read():
	pass

def _close():
	pass
	
command = {
	'ls': 		_ls,
	'open':		_open,
	'mv':		_mv,
	'cp':		_cp,
	'ln':		_ln,
	'stat':		_stat,
	'read':		_read,
}

s = socket.socket( socket.AF_INET, socket.SOCK_DGRAM )
s.bind( ('', network_port) )
group = socket.inet_aton( network_group )
mreq = struct.pack( '4sL', group, socket.INADDR_ANY )
s.setsockopt( socket.IPPROTO_IP, socket.IP_ADD_MEMBERSHIP, mreq )

while 1:
	msg_in, remote_addr = s.recvfrom( buffer_size )

	print "received='%s' from '%s'" % ( msg_in, remote_addr )
	msg_out = json.loads( msg_in )

	argument = msg_out.get( 'argument', None )
	result = []
	result = command[msg_out['command']](argument)
	while result:
		msg_out['result'] = []
		for i in range(10):
			try:
				msg_out['result'].append(result.pop())
			except IndexError, ex:
				pass

		msg_out['pid'] = os.getpid()
		msg_out['host'] = (data_address, data_port)

		s.sendto( json.dumps( msg_out ), remote_addr )

s.close()
sys.exit(0)
